GIS 소스코드

install.packages("ggplot2")
install.packages("ggmap")
library(ggmap)
ggmap(get_map(location='south korea', zoom=7))
register_google(key = 'AIzaSyDyIkjlG_f2pef9iGzxG60MziIsk6cyWSE')
myLocation <- c(lon=128.25, lat=35.95)
ggmap(get_map(location=myLocation, zoom=7))
get_map(location='south korea', zoom=7, source='google', maptype='terrain')
map <- get_map(location='south korea', zoom=7, maptype='roadmap', color='bw')
wifi <- read.csv("wifi.csv", header=T, as.is=T)
head(wifi)
ggmap(map) + geom_point(data=wifi, aes(x=lon, y=lat, color=company))
ggmap(map) + stat_density_2d(data=wifi, aes(x=lon, y=lat))
p <- ggmap(map) + stat_density_2d(data=wifi, aes(x=lon, y=lat, fill=..level.., alpha=..level..),
geom='polygon', size=2, bins=30)
p + scale_fill_gradient(low='yellow', high='red')
p + scale_fill_gradient(low='yellow', high='red', guide=F) + scale_alpha(range=c(0.02, 0.8), guide=F)


airport <- read.csv("airport.csv", header=T, as.is=T)
route <- read.csv("route.csv", header=T, as.is=T)
head(route)
ggmap(map) + geom_point(data=airport, aes(x=lon, y=lat))
geocode(c('incheon airport', 'gimpo airport'))
p <- ggmap(map) + geom_point(data=airport, aes(x=lon, y=lat))
p + geom_line(data=route, aes(x=lon, y=lat, group=id))





install.packages("shiny")
library(shiny)
library(leaflet)
library(dplyr)
seoul_lonlat = unlist(ggmap::geocode('seoul', source='google'))
wifi_data = read.csv("wifi.csv", stringsAsFactors = FALSE)
# 서울 열린데이터광장
# http://data.seoul.go.kr/openinf/sheetview.jsp?infId=OA-1218&tMenu=11

leaflet(wifi_data) %>%
setView(lng = seoul_lonlat[1], lat = seoul_lonlat[2], zoom = 11) %>%
addTiles() %>%
addCircles(lng = ~lon, lat=~lat)
#leaflet(data)를 통해 leaflet map widget을 생성하고 데이터를 연결한다
#setView()함수를 사용하면 지도의 중심과 확대 정도를 설정한다
#addTiles() 함수는 기본 타일(OpenStreetMap)을 불러와서 지도를 보여준다
#addCircles() 함수를 통해 데이터를 원의 형태로 지도에 나타낼 수 있다

leaflet(wifi_data) %>%
setView(lng = seoul_lonlat[1], lat = seoul_lonlat[2], zoom = 11) %>%
addProviderTiles('Stamen.Toner') %>%
addCircles(lng = ~lon, lat=~lat, popup = ~company)

#addTiles()대신에 addProviderTiles()를 이용하면 OSM이 아닌 다른 형태의 지도를 사용할 수 있다
#Stamen.Toner,Stamen.Watercolor, Acetate.terrain, CartoDB.Positron 등의 옵션을 사용할 수 있고
#에서 다른 provider들의 지도를 불러올 수 있는 방법에 대해서 알아볼 수 있다
#popup 옵션을 이용하면 tooltip을 생성할 수 있다

telecom_color = colorFactor('Set2', wifi_data$company)
table(wifi_data$company)

leaflet(wifi_data) %>%
setView(lng = seoul_lonlat[1], lat = seoul_lonlat[2], zoom = 11) %>%
addProviderTiles('Stamen.Toner') %>%
addCircles(lng = ~lon, lat=~lat, popup = ~company, color = ~telecom_color(company)) %>%
addLegend(position = 'bottomright',title = 'Wifi Provider',pal = telecom_color, values = ~company, opacity = 1)

leaflet() %>%
setView(lng = seoul_lonlat[ 1], lat = seoul_lonlat[2], zoom = 11) %>%
addProviderTiles('Stamen.Toner') %>%
addCircles(data = wifi_data %>% filter(company == 'SK'),
lng = ~lon, lat=~lat, popup = ~company, group = 'sk',
color = ~telecom_color(company)) %>%
addCircles(data = wifi_data %>% filter(company == 'KT'),
lng = ~lon, lat=~lat, popup = ~company, group = 'kt',
color = ~telecom_color(company)) %>%
addCircles(data = wifi_data %>% filter(company == 'LGU+'),
lng = ~lon, lat=~lat, popup = ~company, group = 'lg',
color = ~telecom_color(company)) %>%
addLayersControl(overlayGroups = c('skt', 'kt', 'lg'),
options = layersControlOptions(collapsed = FALSE))
